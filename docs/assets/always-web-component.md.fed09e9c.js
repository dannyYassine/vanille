import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.919e884c.js";const m=JSON.parse('{"title":"Always web components","description":"","frontmatter":{},"headers":[],"relativePath":"always-web-component.md","filePath":"always-web-component.md"}'),l={name:"always-web-component.md"},e=p(`<h1 id="always-web-components" tabindex="-1">Always web components <a class="header-anchor" href="#always-web-components" aria-label="Permalink to &quot;Always web components&quot;">​</a></h1><h2 id="basic-usage" tabindex="-1">Basic usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic usage&quot;">​</a></h2><p><code>vanille</code> will use native browser features to improve performance. The core functionality behind this is leveraging web components.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { BaseView } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@vanille/core&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { BaseView } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@vanille/core&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Then start building your components:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { BaseView, define } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@vanille/core&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#B392F0;">define</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Application</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BaseView</span><span style="color:#E1E4E8;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { BaseView, define } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@vanille/core&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">define</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Application</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BaseView</span><span style="color:#24292E;"> {}</span></span></code></pre></div><p>The decorator <code>define</code> is syntactic sugar over:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">prefix</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;v&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">customElements.</span><span style="color:#B392F0;">define</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">prefix</span><span style="color:#9ECBFF;">}-\${</span><span style="color:#E1E4E8;">application</span><span style="color:#9ECBFF;">}&#39;, Application);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">prefix</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;v&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">customElements.</span><span style="color:#6F42C1;">define</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">prefix</span><span style="color:#032F62;">}-\${</span><span style="color:#24292E;">application</span><span style="color:#032F62;">}&#39;, Application);</span></span></code></pre></div><p><code>vanille</code> comes pack with syntactic sugar decorators, all of which are already sprinkled on the base web component class <code>BaseView</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  define,</span></span>
<span class="line"><span style="color:#E1E4E8;">  hasJsxTemplate,</span></span>
<span class="line"><span style="color:#E1E4E8;">  hasObservableProps,</span></span>
<span class="line"><span style="color:#E1E4E8;">  hasObservableState,</span></span>
<span class="line"><span style="color:#E1E4E8;">  hasRefs,</span></span>
<span class="line"><span style="color:#E1E4E8;">  hasShadowDom,</span></span>
<span class="line"><span style="color:#E1E4E8;">  define,</span></span>
<span class="line"><span style="color:#E1E4E8;">  hasEmit</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@vanille/core&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  define,</span></span>
<span class="line"><span style="color:#24292E;">  hasJsxTemplate,</span></span>
<span class="line"><span style="color:#24292E;">  hasObservableProps,</span></span>
<span class="line"><span style="color:#24292E;">  hasObservableState,</span></span>
<span class="line"><span style="color:#24292E;">  hasRefs,</span></span>
<span class="line"><span style="color:#24292E;">  hasShadowDom,</span></span>
<span class="line"><span style="color:#24292E;">  define,</span></span>
<span class="line"><span style="color:#24292E;">  hasEmit</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@vanille/core&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>More in depth in <a href="./decorators.html">Decorators</a>.</p>`,11),o=[e];function c(t,r,i,E,y,d){return a(),n("div",null,o)}const b=s(l,[["render",c]]);export{m as __pageData,b as default};
